#!/bin/bash

#
#  Copyright 2019 The FATE Authors. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

export JAVA_PATH=${javahome}
source ${pbase}/${pname}/bin/init_env.sh

workdir=\$(cd \$(dirname \$0); pwd)
log_dir=\${workdir}/logs

basepath=\$workdir
configpath=\${workdir}/conf
fatepath=\${workdir}/..


module=fateboard
main_class=org.springframework.boot.loader.JarLauncher
pidfile="\${workdir}/fateboard.pid"

getpid() {
  [ ! -f "\$pidfile" ] && touch \$pidfile
  pid=\$( cat \$pidfile )
  echo \$pid | grep -E '[0-9]+'
  if [ \$? -eq 0 ]
  then
    echo \$pid
  else
    echo ""
  fi
}

checkpid() {
  pid=\$1
  ps aux|grep -v grep |grep "\$basepath/\${module}.jar"
  rpid=\$( ps aux|grep -v grep |grep "\$basepath/\${module}.jar"|awk '{print int(\$2); }' )
  if [ -z "\$rpid" ]
  then
    echo "service not running"
    return 1
  fi
  if [ "\$rpid" -gt 0 ]
  then
    if [ -z "\$pid" ]
    then
      echo "Exception process exists, but not record in pidfile. Please has a check"
      return 2
    else:
      if [ "\$pid" -ne "\$rpid" ]
      then
        echo "Exception process exists. Please has a check"
        return 3
      else:
        return 0
      fi
    fi
  else
    if [ -n "\$pid" ]
    then
      echo > \$pidfile
    fi
    return 1
  fi
}


mklogsdir() {
    if [[ ! -d \$log_dir ]]; then
        mkdir -p \$log_dir
    fi
}

status() {
    pid=\$(getpid)
    checkpid \$pid
    if [ \$? -eq 0 ]
    then
      echo "status: \$module(\$pid) running"
    else
      if [ \$? -ne 1 ]
      then
        echo "service not running"
      fi
    fi
}

start() {
    pid=\$(getpid)
    checkpid \$pid
    if [ \$? -eq 0 ]
    then
      echo "service already started. pid: \${pid}"
    else
      if [ \$? -eq 1 ]
      then
          mklogsdir
          nohup \$JAVA_HOME/bin/java  -Dspring.config.location=\$configpath/application.properties -DFATE_DEPLOY_PREFIX=\$fatepath/logs/  -Dssh_config_file=\$basepath/ssh/  -Xmx2048m -Xms2048m -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:gc.log -XX:+HeapDumpOnOutOfMemoryError  -jar \$basepath/\${module}.jar  >/dev/null 2>&1 &
          pid=\$!
          sleep 8
          checkpid \$pid
          if [ \$? -eq 0 ]
          then
            echo \$pid > \$pidfile
            echo "service start sucessfully. pid: \${pid}"
          else
            echo "service start failed, please check \${log_dir}/error.log and \${log_dir}/console.log"
          fi
      fi
    fi
}

stop() {
    pid=\$(getpid)
    checkpid \$pid
    if [ \$? -eq 0 ]
    then
        kill -9 \${pid}
        if [ \$? -eq 0 ]
        then
            echo > \$pidfile
            echo "kill \$module, sucessfully. pid: \${pid}"
        else
            echo "kill error, please has a check"
        fi
    fi
}


case "\$1" in
    start)
        start
        #status
        ;;

    stop)
        stop
        ;;
    status)
        status
        ;;

    restart)
        stop
        start
        #status
        ;;
    *)
        echo "usage: \$0 {start|stop|status|restart}"
        exit -1
        ;;
esac
